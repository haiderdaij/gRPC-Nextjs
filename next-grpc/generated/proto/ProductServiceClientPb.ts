/**
 * @fileoverview gRPC-Web generated client stub for product
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.1
// source: proto/product.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as proto_product_pb from "../proto/product_pb"; // proto import: "proto/product.proto"

export class ProductClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any }
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateProduct = new grpcWeb.MethodDescriptor(
    "/product.Product/CreateProduct",
    grpcWeb.MethodType.UNARY,
    proto_product_pb.ProductItem,
    proto_product_pb.ProductItem,
    (request: proto_product_pb.ProductItem) => {
      return request.serializeBinary();
    },
    proto_product_pb.ProductItem.deserializeBinary
  );

  createProduct(
    request: proto_product_pb.ProductItem,
    metadata?: grpcWeb.Metadata | null
  ): Promise<proto_product_pb.ProductItem>;

  createProduct(
    request: proto_product_pb.ProductItem,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ): grpcWeb.ClientReadableStream<proto_product_pb.ProductItem>;

  createProduct(
    request: proto_product_pb.ProductItem,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/product.Product/CreateProduct",
        request,
        metadata || {},
        this.methodDescriptorCreateProduct,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/product.Product/CreateProduct",
      request,
      metadata || {},
      this.methodDescriptorCreateProduct
    );
  }

  methodDescriptorReadProduct = new grpcWeb.MethodDescriptor(
    "/product.Product/ReadProduct",
    grpcWeb.MethodType.UNARY,
    proto_product_pb.ProductId,
    proto_product_pb.ProductItem,
    (request: proto_product_pb.ProductId) => {
      return request.serializeBinary();
    },
    proto_product_pb.ProductItem.deserializeBinary
  );

  readProduct(
    request: proto_product_pb.ProductId,
    metadata?: grpcWeb.Metadata | null
  ): Promise<proto_product_pb.ProductItem>;

  readProduct(
    request: proto_product_pb.ProductId,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ): grpcWeb.ClientReadableStream<proto_product_pb.ProductItem>;

  readProduct(
    request: proto_product_pb.ProductId,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/product.Product/ReadProduct",
        request,
        metadata || {},
        this.methodDescriptorReadProduct,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/product.Product/ReadProduct",
      request,
      metadata || {},
      this.methodDescriptorReadProduct
    );
  }

  methodDescriptorReadProducts = new grpcWeb.MethodDescriptor(
    "/product.Product/ReadProducts",
    grpcWeb.MethodType.UNARY,
    proto_product_pb.VoidParam,
    proto_product_pb.ProductItems,
    (request: proto_product_pb.VoidParam) => {
      return request.serializeBinary();
    },
    proto_product_pb.ProductItems.deserializeBinary
  );

  readProducts(
    request: proto_product_pb.VoidParam,
    metadata?: grpcWeb.Metadata | null
  ): Promise<proto_product_pb.ProductItems>;

  readProducts(
    request: proto_product_pb.VoidParam,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItems
    ) => void
  ): grpcWeb.ClientReadableStream<proto_product_pb.ProductItems>;

  readProducts(
    request: proto_product_pb.VoidParam,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItems
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/product.Product/ReadProducts",
        request,
        metadata || {},
        this.methodDescriptorReadProducts,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/product.Product/ReadProducts",
      request,
      metadata || {},
      this.methodDescriptorReadProducts
    );
  }

  methodDescriptorUpdateProduct = new grpcWeb.MethodDescriptor(
    "/product.Product/UpdateProduct",
    grpcWeb.MethodType.UNARY,
    proto_product_pb.ProductItem,
    proto_product_pb.ProductItem,
    (request: proto_product_pb.ProductItem) => {
      return request.serializeBinary();
    },
    proto_product_pb.ProductItem.deserializeBinary
  );

  updateProduct(
    request: proto_product_pb.ProductItem,
    metadata?: grpcWeb.Metadata | null
  ): Promise<proto_product_pb.ProductItem>;

  updateProduct(
    request: proto_product_pb.ProductItem,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ): grpcWeb.ClientReadableStream<proto_product_pb.ProductItem>;

  updateProduct(
    request: proto_product_pb.ProductItem,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.ProductItem
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/product.Product/UpdateProduct",
        request,
        metadata || {},
        this.methodDescriptorUpdateProduct,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/product.Product/UpdateProduct",
      request,
      metadata || {},
      this.methodDescriptorUpdateProduct
    );
  }

  methodDescriptorDeleteProduct = new grpcWeb.MethodDescriptor(
    "/product.Product/DeleteProduct",
    grpcWeb.MethodType.UNARY,
    proto_product_pb.ProductId,
    proto_product_pb.DeleteProductResponse,
    (request: proto_product_pb.ProductId) => {
      return request.serializeBinary();
    },
    proto_product_pb.DeleteProductResponse.deserializeBinary
  );

  deleteProduct(
    request: proto_product_pb.ProductId,
    metadata?: grpcWeb.Metadata | null
  ): Promise<proto_product_pb.DeleteProductResponse>;

  deleteProduct(
    request: proto_product_pb.ProductId,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.DeleteProductResponse
    ) => void
  ): grpcWeb.ClientReadableStream<proto_product_pb.DeleteProductResponse>;

  deleteProduct(
    request: proto_product_pb.ProductId,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_product_pb.DeleteProductResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/product.Product/DeleteProduct",
        request,
        metadata || {},
        this.methodDescriptorDeleteProduct,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/product.Product/DeleteProduct",
      request,
      metadata || {},
      this.methodDescriptorDeleteProduct
    );
  }
}
